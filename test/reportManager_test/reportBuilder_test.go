package test

import (
	"os"
	"reflect"
	"testing"

	"github.com/AnnWann/pstu_finance_system/src/models"
	"github.com/AnnWann/pstu_finance_system/src/reportManager"
	test_helpers "github.com/AnnWann/pstu_finance_system/test"
)

func TestBuildRelatorioMensal(t *testing.T) {
	file := "reportManager1/buildRelatorioMensal/test.db"
	sqlCommands := []string{
		"insert into pessoas (id, classe) values (3, 'Nucleo')",
		"insert into pessoas (id, classe) values (4, 'Membro')",
		"insert into pessoas (id, classe) values (5, 'Membro')",
		"insert into pessoas (id, classe) values (6, 'Membro')",
		"insert into pessoas (id, classe) values (7, 'Membro')",
		"insert into pessoas (id, classe) values (8, 'Membro')",
		"insert into pessoas (id, classe) values (9, 'Membro')",
		"insert into pessoas (id, classe) values (10, 'Membro')",
		"insert into pessoas (id, classe) values (11, 'Membro')",
		"insert into nucleos (id, nome, cidade, estado, reserva, dia_de_pagamento) values (3, 'Nucleo 1', 'Cidade 1', 'Estado 1', 0, '01')",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (4, 'Membro 1', 3, -300, 10, 0)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (5, 'Membro 2', 3, -400, 10, 0)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (6, 'Membro 3', 3, -200, 10, 0)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (7, 'Membro 4', 3, -200, 10, 0)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (8, 'Membro 5', 3, -200, 10, 0)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (9, 'Membro 6', 3, -200, 10, 0)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (10, 'Membro 7', 3, -100, 10, 5)",
		"insert into membros (id, nome, nucleo, cargo, contribuicao_mensal, credito) values (11, 'Membro 8', 3, -100, 10, 10)",
		"insert into tipos_de_registro (id, nome, nucleo, descricao, partilha_partidaria) values (1, 'Tipo 1', 3, 'Descricao 1', 1)",
		"insert into tipos_de_registro (id, nome, nucleo, descricao, partilha_partidaria) values (2, 'Tipo 2', 3, 'Descricao 2', 1)",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (1, '01', '01', '2020', -100, 3, 4, 3, 1, 10, 'Descricao 1')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (2, '01', '01', '2020', -100, 3, 5, 3, 1, 10, 'Descricao 2')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (3, '01', '01', '2020', -100, 3, 6, 3, 1, 10, 'Descricao 3')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (4, '01', '01', '2020', -100, 3, 7, 3, 1, 10, 'Descricao 4')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (5, '01', '01', '2020', -100, 3, 8, 3, 1, 10, 'Descricao 5')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (6, '01', '01', '2020', -100, 3, 9, 3, 1, 10, 'Descricao 6')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (7, '01', '01', '2020', -100, 3, 10, 3, 1, 5, 'Descricao 7')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (8, '01', '01', '2020', -200, 3, 0, 4, 1, 4, 'Descricao 8')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (9, '01', '01', '2020', -200, 3, 0, 5, 1, 4, 'Descricao 9')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (10, '01', '01', '2020', -200, 3, 0, 6, 1, 4, 'Descricao 10')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (11, '01', '01', '2020', -400, 3, 4, 0, 1, 10, 'Descricao 11')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (12, '01', '01', '2020', -400, 3, 5, 0, 1, 10, 'Descricao 12')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (13, '01', '01', '2020', -400, 3, 6, 0, 1, 10, 'Descricao 13')",
		"insert into registros (id, dia, mes, ano, tipo, nucleo, pagante, cobrante, quantidade, valor, descricao) values (14, '01', '01', '2020', 1, 3, 7, 3, 1, 10, 'Descricao 14')",
	}

	db := test_helpers.BuildEnviroment(t, file, sqlCommands)

	defer db.Close()
	defer os.RemoveAll("reportManager1")

	expected := models.Relatorio_mensal_complexo{
		ID:  "Nucleo 1-01/2020",
		Mes: "01",
		Ano: "2020",
		Membros: map[int]models.Membro{
			4: {
				ID:                  4,
				Nome:                "Membro 1",
				Nucleo:              3,
				Cargo:               -300,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			5: {
				ID:                  5,
				Nome:                "Membro 2",
				Nucleo:              3,
				Cargo:               -400,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			6: {
				ID:                  6,
				Nome:                "Membro 3",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			7: {
				ID:                  7,
				Nome:                "Membro 4",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			8: {
				ID:                  8,
				Nome:                "Membro 5",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			9: {
				ID:                  9,
				Nome:                "Membro 6",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			10: {
				ID:                  10,
				Nome:                "Membro 7",
				Nucleo:              3,
				Cargo:               -100,
				Contribuicao_mensal: 10,
				Credito:             5,
			},
			11: {
				ID:                  11,
				Nome:                "Membro 8",
				Nucleo:              3,
				Cargo:               -100,
				Contribuicao_mensal: 10,
				Credito:             10,
			},
		},
		Membros_apos_pagamentos: map[int]models.Membro{
			4: {
				ID:                  4,
				Nome:                "Membro 1",
				Nucleo:              3,
				Cargo:               -300,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			5: {
				ID:                  5,
				Nome:                "Membro 2",
				Nucleo:              3,
				Cargo:               -400,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			6: {
				ID:                  6,
				Nome:                "Membro 3",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			7: {
				ID:                  7,
				Nome:                "Membro 4",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			8: {
				ID:                  8,
				Nome:                "Membro 5",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			9: {
				ID:                  9,
				Nome:                "Membro 6",
				Nucleo:              3,
				Cargo:               -200,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			10: {
				ID:                  10,
				Nome:                "Membro 7",
				Nucleo:              3,
				Cargo:               -100,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
			11: {
				ID:                  11,
				Nome:                "Membro 8",
				Nucleo:              3,
				Cargo:               -100,
				Contribuicao_mensal: 10,
				Credito:             0,
			},
		},
		Nucleo: models.Nucleo{
			ID:               1,
			Nome:             "Nucleo 1",
			Cidade:           "Cidade 1",
			Estado:           "Estado 1",
			Reserva:          0,
			Dia_de_Pagamento: "01",
		},
		Partido: models.Partido{
			ID:      1,
			Nome:    "Partido Teste",
			Reserva: 0,
		},
		Pagamentos_de_membros: models.SubRelatorio{
			Registros: []models.Registro{
				{
					ID:         1,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    4,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 1",
				},
				{
					ID:         2,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    5,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 2",
				},
				{
					ID:         3,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    6,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 3",
				},
				{
					ID:         4,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    7,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 4",
				},
				{
					ID:         5,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    8,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 5",
				},
				{
					ID:         6,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    9,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 6",
				},
				{
					ID:         7,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -100,
					Nucleo:     3,
					Pagante:    10,
					Cobrante:   3,
					Quantidade: 1,
					Valor:      5,
					Descricao:  "Descricao 7",
				},
			},
			Total: 65,
		},
		Vendas_jornal: models.SubRelatorio{
			Registros: []models.Registro{
				{
					ID:         8,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -200,
					Nucleo:     3,
					Pagante:    0,
					Cobrante:   4,
					Quantidade: 1,
					Valor:      4,
					Descricao:  "Descricao 8",
				},
				{
					ID:         9,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -200,
					Nucleo:     3,
					Pagante:    0,
					Cobrante:   5,
					Quantidade: 1,
					Valor:      4,
					Descricao:  "Descricao 9",
				},
				{
					ID:         10,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -200,
					Nucleo:     3,
					Pagante:    0,
					Cobrante:   6,
					Quantidade: 1,
					Valor:      4,
					Descricao:  "Descricao 10",
				},
			},
			Total: 16, // set the correct total value
		},
		Gastos: models.SubRelatorio{
			Registros: []models.Registro{
				{
					ID:         11,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -400,
					Nucleo:     3,
					Pagante:    4,
					Cobrante:   0,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 11",
				},
				{
					ID:         12,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -400,
					Nucleo:     3,
					Pagante:    5,
					Cobrante:   0,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 12",
				},
				{
					ID:         13,
					Dia:        "01",
					Mes:        "01",
					Ano:        "2020",
					Tipo:       -400,
					Nucleo:     3,
					Pagante:    6,
					Cobrante:   0,
					Quantidade: 1,
					Valor:      10,
					Descricao:  "Descricao 13",
				},
			},
			Total: 30,
		},
		Registros_especificos: models.Registros_Especificos_Nucleo{
			Tipos: map[int]models.SubRelatorio{
				1: {
					Registros: []models.Registro{
						{
							ID:         1,
							Dia:        "01",
							Mes:        "01",
							Ano:        "2020",
							Tipo:       1,
							Nucleo:     3,
							Pagante:    0,
							Cobrante:   4,
							Quantidade: 1,
							Valor:      10,
							Descricao:  "Descricao 1",
						},
						{
							ID:         2,
							Dia:        "01",
							Mes:        "01",
							Ano:        "2020",
							Tipo:       1,
							Nucleo:     3,
							Pagante:    0,
							Cobrante:   4,
							Quantidade: 1,
							Valor:      10,
							Descricao:  "Descricao 2",
						},
						{
							ID:         3,
							Dia:        "01",
							Mes:        "01",
							Ano:        "2020",
							Tipo:       1,
							Nucleo:     3,
							Pagante:    0,
							Cobrante:   3,
							Quantidade: 1,
							Valor:      10,
							Descricao:  "Descricao 3",
						},
					},
					Total: 30, // set the correct total value
				},
				2: {
					Registros: []models.Registro{
						{
							ID:         8,
							Dia:        "01",
							Mes:        "01",
							Ano:        "2020",
							Tipo:       2,
							Nucleo:     3,
							Pagante:    0,
							Cobrante:   4,
							Quantidade: 1,
							Valor:      4,
							Descricao:  "Descricao 8",
						},
						{
							ID:         9,
							Dia:        "01",
							Mes:        "01",
							Ano:        "2020",
							Tipo:       2,
							Nucleo:     3,
							Pagante:    0,
							Cobrante:   5,
							Quantidade: 1,
							Valor:      4,
							Descricao:  "Descricao 9",
						},
					},
					Total: 8,
				},
			},
			Total: 38,
		},
		Total_Ganho:          119,
		Total_Liquido:        89,
		Pagamento_Partidario: 76,
		Lucro_Nucleo:         13,
		Link_Arquivo:         "",
	}

	expected_Pagamento_partido := models.Registro{
		ID:         14,
		Dia:        "01",
		Mes:        "01",
		Ano:        "2020",
		Tipo:       -300,
		Nucleo:     3,
		Pagante:    3,
		Cobrante:   1,
		Quantidade: 1,
		Valor:      76,
	}

	result, pagamento_partido, err := reportManager.BuildRelatorioMensal("01", "2020", 3)
	if err != nil {
		t.Fatalf("Error: %v", err)
	}

	if !reflect.DeepEqual(expected_Pagamento_partido, pagamento_partido) {
		t.Errorf("Expected: %v\nGot: %v", expected_Pagamento_partido, pagamento_partido)
	}

	if !reflect.DeepEqual(expected, result) {
		t.Errorf("Expected: %v\nGot: %v", expected, result)
	}
}
